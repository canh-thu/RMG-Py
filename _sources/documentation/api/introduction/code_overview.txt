*************
Code Overview
*************

The RMG source code is found in the `source/` directory. 

Top-Level Modules
=================

The top-level directory contains a number of Python files that draw on the RMG source code to provide a variety of functionality. A summary of the uses of these files is given in the table below:

==============  ================================================================
File            Use
==============  ================================================================
rmg.py          Generate a reaction mechanism for a set of reaction systems
unirxn.py       Estimate the phenomenological rate coefficients for a
                unimolecular reaction network
==============  ================================================================

In general, these modules accept as input the path to a properly-constructed XML file containing parameters needed to provide the desired functionality.

A summary of input options for each module can be generated by using the ``--help`` flag, e.g.::

	$ python rmg.py --help

The functionality for providing the above help is provided by the ``optparse`` module.

The RMG Package
===============

The core functionality of RMG can be found in the ``rmg`` package, located at `source/rmg/`. The modules in this directory provide the core classes and functions that are used throughout RMG, such as classes for chemical species and reactions.

Note that several of the modules have been converted to Cython in the interests of speed. The ``rmg.chem`` and ``rmg.graph`` modules were converted after determining that graph isomorphism checking -- used throughout RMG to identify identical species based on chemical structures -- was a significant bottleneck that could not be sufficiently accelerated by pure Python means. Similarly, the ``rmg.thermo`` module was converted after determining that evaluation of species thermodynamics was a significant bottleneck. All of these modules were converted in a manner that allows for them to be used in a pure Python mode, or compiled via Cython to a shared library for a speed boost.

A summary of the RMG core modules is given in the table below:

======================  ========================================================
Module                  Description
======================  ========================================================
``rmg.cantera_loader``  Modified version of Cantera's ``cantera_loader`` module
``rmg.chem``            Classes describing chemical building blocks (atoms and 
                        bonds)
``rmg.constants``       Set of physical constants
``rmg.ctml_writer``     Modified version of Cantera's ``ctml_writer`` module
``rmg.data``            Classes that implement the dictionary-tree-library 
                        database
``rmg.graph``           Classes and functions for working with graphs (used to 
                        represent chemical structures)
``rmg.io``              Classes and functions for working with RMG input and 
                        output files
``rmg.kinetics``        Classes representing various kinetic expressions (e.g.
                        ArrheniusKinetics)
``rmg.main``            The main body of RMG code, including the core mechanism
                        generation loop
``rmg.model``           Classes for the core-edge reaction model generated by 
                        RMG
``rmg.reaction``        Classes and functions for working with chemical 
                        reactions and representing the kinetics databases
``rmg.settings``        Collection of global settings
``rmg.species``         Classes and functions for working with chemical species 
                        and representing the thermodynamics databases
``rmg.spectral``        Classes representing spectroscopic degrees of freedom
``rmg.spectralfit``     Functions for estimating degrees of freedom for a  
                        species by fitting to heat capacity data
``rmg.structure``       Classes describing chemical structures (represented as 
                        graphs)
``rmg.thermo``          Classes representing various thermodynamic expressions
======================  ========================================================



RMG Subpackages
===============

Modules containing more specific, related functionality are collected into subpackages of ``rmg``, and are stored in subdirectories of `source/rmg/`. Currently the only subpackage is ``rmg.unirxn``, which provides functionality for estimating pressure-dependent rate coefficients :math:`k(T,P)` for unimolecular reaction networks. The `source/rmg/spectralfit` folder simply contains the source files for the ``rmg.spectralfit`` module, and is not a package of its own.

