***********************************
The ``rmg.unirxn.mastereqn`` Module
***********************************

.. module:: rmg.unirxn.mastereqn

This module contains functions for constructing a collisional transfer probabilities matrix and
a full master equation matrix.

Methods in ``rmg.unirxn.mastereqn``
===================================

.. function:: collisionmatrix(T, P, E, collFreq, densStates, E0, dEdown, Ngrains, Mcoll, msg)

	Calculates the collisional transfer rate matrix for a given isomer. The
	parameters are:
	
	============ ====== ========================================================
	Parameter    Intent Description
	============ ====== ========================================================
	`T`          in     The temperature to evaluate k(T,P) at in K
	`P`          in     The pressure to evaluate k(T,P) at in Pa
	`E`          in     A 1D array of energies in J/mol
	`collFreq`   in     The (modified) collision frequency for the isomer in
	                    Hz
	`densStates` in     The density of states for the isomer
	`E0`         in     The ground-state energy for the isomer in J/mol
	`dEdown`     in     The average energy transferred in a deactivating
	                    collision in J/mol
	`Ngrains`    in     The number of energy grains being used
	`Mcoll`      out    The collision matrix for the isomer
	`msg`        out    If the subroutine was unsuccessful, this string will
	                    contain a brief message describing the error; the
	                    string will be empty if the subroutine was successful
	============ ====== ========================================================



.. function:: transferrate(i, j, Ei, Ej, alpha, E0, rho, Ngrains, T, rate)
	
	Computes the unnormalized probability of a collisional energy transfer
	from state j (with energy Ej) to state i (with energy Ei) using a
	single-exponental-down model.
	
	============ ====== ======================================================
	Parameter    Intent Description
	============ ====== ======================================================
	`i`          in     index of destination state
	`j`          in     index of source state
	`Ei`         in     energy of destination state i in cm^-1
	`Ej`         in     energy of source state j in cm^-1
	`alpha`      in     parameter in exponential-down model in (cm^-1)^-1
	`E0`         in     electronic + zero-point energy of ground state in
	                    cm^-1
	`rho`        in     density of states
	`Ngrains`    in     number of energy grains in density of states
	`T`          in     temperature of interest in K
	`rate`       out    collisional transfer probability in s^-1
	============ ====== ======================================================



.. function:: fullmematrix(E, E0, Mcoll0, Kij, Gnj, Fim, indices, nRows, nGrains, nIsom, nProd, Mcoll, Mrxn, msg)
	
	Construct the full master equation matrix. The parameters are:
	
	========== ====== ========================================================
	Parameter  Intent Description
	========== ====== ========================================================
	`E`        in     A 1D array of energies in J/mol
	`E0`       in     The active-state energy cutoffs for each isomer in J/mol
	`Mcoll0`   in     The collision matrices for each isomer
	`Kij`      in     The microcanonical isomerization rate coefficients in
	                  s^-1
	`Fim`      in     The microcanonical association rates (rate coefficients
	                  times bimolecular equilibrium distributions) in s^-1
	`Gnj`      in     The microcanonical dissociation rate coefficients in
	                  s^-1
	`indices`  in     The indexing scheme to use
	`nRows`    in     The number of rows and columns in the full matrix
	`nGrains`  in     The number of energy grains being used
	`nIsom`    in     The number of isomers in the network
	`nProd`    in     The number of reactant/product channels in the network
	`Mcoll`    out    The full master equation matrix - collision terms
	`Mrxn`     out    The full master equation matrix - reaction terms
	`msg`      out    If the subroutine was unsuccessful, this string will
	                  contain a brief message describing the error; the
	                  string will be empty if the subroutine was successful
	========== ====== ========================================================

