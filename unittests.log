mkdir -p testing/coverage
rm -rf testing/coverage/*
nosetests --nocapture --nologcapture --all-modules --verbose --with-coverage --cover-inclusive --cover-package=rmgpy --cover-erase --cover-html --cover-html-dir=testing/coverage rmgpy
test the checkConformerEnergy function with an list of energies. ... ok
Test the calculation of the high-pressure limit rate coef for one of the kinetics jobs at Tmin and Tmax. ... ok
Test the generated temperature list. ... ok
Test the master equation solution method chosen. ... ok
Test the number of isomers identified. ... ok
Test the whether or not RMG mode is turned on. ... ok
Test the number of products identified. ... ok
Test the number of reactants identified. ... ok
Test a path reaction label ... ok
Test the number pressures specified. ... ok
Test the minimum pressure value. ... ok
Test the pressure list. ... ok
Test the whether or not RMG mode is turned on. ... ok
Test the number temperatures specified. ... ok
Test the temperature list. ... ok
Test the Temperature Units. ... ok
Test the temperature value. ... ok
Test the whether or not tunneling has been included in a specific kinetics job. ... ok
Test the max grain size value. ... ok
Uses a Gaussian03 log file for ethylene (C2H4) to test that its ... SKIP: WIP test failed: -78.46694399999998 != -78.467452 within 4 places
Uses a Gaussian03 log file for ethylene (C2H4) to test that its ... SKIP: WIP test failed: -78.55632 != -78.562189 within 4 places
Uses a Gaussian03 log file for oxygen (O2) to test that its ... ok
Uses an optimum geometry for s-butanol (CCC(O)C) to test that the ... ok
Uses an optimum geometry for ethane (CC) to test that the ... ok
Test that a Geometry object can be successfully reconstructed ... ok
Test that a Geometry object can be successfully pickled and unpickled ... ok
Uses a Molepro log file for ethylene_dz (C2H4) to test that F12a ... ok
Uses a Molepro log file for ethylene_qz (C2H4) to test that F12b ... ok
Uses a Molepro log file for OH (C2H4) to test that radical ... ok
Test the value of the atomic mass unit. ... ok
Test the value of the Avogadro constant. ... ok
Test the value of the Bohr radius. ... ok
Test the value of the Boltzmann constant. ... ok
Test the value of the electron rest mass. ... ok
Test the value of the elementary charge constant. ... ok
Test the value of the gas law constant. ... ok
Test the value of the Hartree energy. ... ok
Test the value of the neutron rest mass. ... ok
Test the value of pi. ... ok
Test the value of the Planck constant. ... ok
Test the value of the proton rest mass. ... ok
Test the value of the reduced Planck constant. ... ok
Test the value of the speed of light in a vacuum. ... ok
Test that nodes can match other nodes. ... ok
Test that the MatchNodeToStructure family works properly. ... ok
Test that the loadFamilies function raises the correct exceptions ... ok
Test we can estimate solvation thermochemistry. ... ok
Test that for a given solvent viscosity and temperature we can calculate a solute's diffusivity ... ok
Test we can calculate and set the McGowan volume for species containing H,C,O,N or S ... ok
Test we can estimate Abraham solute parameters correctly using group contributions ... ok
Test we can obtain solute parameters from a library ... ok
Test we can obtain solvent parameters from a library ... ok
Test we can calculate the solvent viscosity given a temperature and its A-E correlation parameters ... ok
Test that the new ThermoDatabase generates appropriate thermo data. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test we generate symmetry numbers correctly. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test that the new ThermoDatabase generates appropriate thermo data. for Aromatics. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test we generate symmetry numbers correctly. for Aromatics. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test that the Arrhenius A property was properly set. ... ok
Test that the Arrhenius Ea property was properly set. ... ok
Test that the Arrhenius T0 property was properly set. ... ok
Test that the Arrhenius Tmax property was properly set. ... ok
Test that the Arrhenius Tmin property was properly set. ... ok
Test the Arrhenius.changeRate() method. ... ok
Test the Arrhenius.changeT0() method. ... ok
Test that the Arrhenius comment property was properly set. ... ok
Test the Arrhenius.fitToData() method. ... ok
Test the Arrhenius.getRateCoefficient() method. ... ok
Test the Arrhenius.isTemperatureValid() method. ... ok
Test that the Arrhenius n property was properly set. ... ok
Test that an Arrhenius object can be pickled and unpickled with no loss ... ok
Test that an Arrhenius object can be reconstructed from its repr() ... ok
Test that the ArrheniusEP A property was properly set. ... ok
Test that the ArrheniusEP E0 property was properly set. ... ok
Test that the ArrheniusEP Tmax property was properly set. ... ok
Test that the ArrheniusEP Tmin property was properly set. ... ok
Test that the ArrheniusEP alpha property was properly set. ... ok
Test the ArrheniusEP.changeRate() method. ... ok
Test that the ArrheniusEP comment property was properly set. ... ok
Test the ArrheniusEP.getRateCoefficient() method. ... ok
Test the ArrheniusEP.isTemperatureValid() method. ... ok
Test that the ArrheniusEP n property was properly set. ... ok
Test that an ArrheniusEP object can be pickled and unpickled with no loss ... ok
Test that an ArrheniusEP object can be reconstructed from its repr() ... ok
Test that the MultiArrhenius Tmax property was properly set. ... ok
Test that the MultiArrhenius Tmin property was properly set. ... ok
Test that the MultiArrhenius A property was properly set. ... ok
Test the MultiArrhenius.changeRate() method. ... ok
Test that the MultiArrhenius comment property was properly set. ... ok
Test the MultiArrhenius.getRateCoefficient() method. ... ok
Test the MultiArrhenius.isTemperatureValid() method. ... ok
Test that a MultiArrhenius object can be pickled and unpickled with no loss ... ok
Test that a MultiArrhenius object can be reconstructed from its repr() ... ok
Test that we can convert to an Arrhenius ... ok
Test the toArrhenius fitting multiple kinetics over a small range, see if we're within 5% at a few points ... ok
Test the toArrhenius temperature range is set correctly. ... ok
Test that the MultiPDepArrhenius Pmax property was properly set. ... ok
Test that the MultiPDepArrhenius Pmin property was properly set. ... ok
Test that the MultiPDepArrhenius Tmax property was properly set. ... ok
Test that the MultiPDepArrhenius Tmin property was properly set. ... ok
Test that the MultiPDepArrhenius arrhenius property was properly set. ... ok
Test the PDepMultiArrhenius.changeRate() method. ... ok
Test that the MultiPDepArrhenius comment property was properly set. ... ok
Test the MultiPDepArrhenius.getRateCoefficient() method. ... ok
Test the MultiPDepArrhenius.isPressureValid() method. ... ok
Test the MultiPDepArrhenius.isTemperatureValid() method. ... ok
Test that a MultiPDepArrhenius object can be pickled and unpickled with ... ok
Test that a MultiPDepArrhenius object can be reconstructed from its ... ok
Test that the PDepArrhenius Pmax property was properly set. ... ok
Test that the PDepArrhenius Pmin property was properly set. ... ok
Test that the PDepArrhenius Tmax property was properly set. ... ok
Test that the PDepArrhenius Tmin property was properly set. ... ok
Test that the PDepArrhenius arrhenius property was properly set. ... ok
Test the PDepArrhenius.changeRate() method. ... ok
Test that the PDepArrhenius comment property was properly set. ... ok
Test the PDepArrhenius.fitToData() method. ... ok
Test the PDepArrhenius.getRateCoefficient() method. ... ok
Test the PDepArrhenius.isPressureDependent() method. ... ok
Test that a PDepArrhenius object can be successfully pickled and ... ok
Test that the PDepArrhenius pressures property was properly set. ... ok
Test that a PDepArrhenius object can be successfully reconstructed ... ok
Test that the Chebyshev Pmax property was properly set. ... ok
Test that the Chebyshev Pmin property was properly set. ... ok
Test that the Chebyshev Tmax property was properly set. ... ok
Test that the Chebyshev Tmin property was properly set. ... ok
Test the Chebyshev.changeRate() method. ... ok
Test that the Chebyshev coeffs property was properly set. ... ok
Test that the Chebyshev comment property was properly set. ... ok
Test the Chebyshev.fitToData() method. ... ok
Test the Chebyshev.getRateCoefficient() method. ... ok
Test the Chebyshev.isPressureDependent() method. ... ok
Test that a Chebyshev object can be pickled and unpickled with no loss ... ok
Test that a Chebyshev object can be reconstructed from its repr() ... ok
Test that the Lindemann Pmax property was properly set. ... ok
Test that the Lindemann Pmin property was properly set. ... ok
Test that the Lindemann Tmax property was properly set. ... ok
Test that the Lindemann Tmin property was properly set. ... ok
Test that the Lindemann arrheniusHigh property was properly set. ... ok
Test that the Lindemann arrheniusLow property was properly set. ... ok
Test the Lindemann.changeRate() method. ... ok
Test that the Lindemann comment property was properly set. ... ok
Test the Lindemann.getRateCoefficient() method. ... ok
Test the Lindemann.isPressureDependent() method. ... ok
Test that a Lindemann object can be pickled and unpickled with no loss ... ok
Test that a Lindemann object can be reconstructed from its repr() ... ok
Test that the ThirdBody Pmax property was properly set. ... ok
Test that the ThirdBody Pmin property was properly set. ... ok
Test that the ThirdBody Tmax property was properly set. ... ok
Test that the ThirdBody Tmin property was properly set. ... ok
Test that the ThirdBody arrhenius property was properly set. ... ok
Test the ThirdBody.changeRate() method. ... ok
Test that the ThirdBody comment property was properly set. ... ok
Test the ThirdBody.getEffectivePressure() method. ... ok
Test the ThirdBody.getRateCoefficient() method. ... ok
Test the ThirdBody.isPressureDependent() method. ... ok
Test that a ThirdBody object can be successfully pickled and ... ok
Test that a ThirdBody object can be successfully reconstructed ... ok
Test that the Troe Pmax property was properly set. ... ok
Test that the Troe Pmin property was properly set. ... ok
Test that the Troe T1 property was properly set. ... ok
Test that the Troe T2 property was properly set. ... ok
Test that the Troe T3 property was properly set. ... ok
Test that the Troe Tmax property was properly set. ... ok
Test that the Troe Tmin property was properly set. ... ok
Test that the Troe alpha property was properly set. ... ok
Test that the Troe arrheniusHigh property was properly set. ... ok
Test that the Troe arrheniusLow property was properly set. ... ok
Test the Troe.changeRate() method. ... ok
Test that the Troe comment property was properly set. ... ok
Test the Troe.getRateCoefficient() method. ... ok
Test the Troe.isPressureDependent() method. ... ok
Test that a Troe object can be pickled and unpickled with no loss of ... ok
Test that a Troe object can be reconstructed from its repr() output ... ok
Test that the KineticsData Tdata property was properly set. ... ok
Test that the KineticsData Tmax property was properly set. ... ok
Test that the KineticsData Tmin property was properly set. ... ok
Test that the KineticsData comment property was properly set. ... ok
Test the KineticsData.getRateCoefficient() method. ... ok
Test the KineticsData.isTemperatureValid() method. ... ok
Test that the KineticsData kdata property was properly set. ... ok
Test that a KineticsData object can be pickled and unpickled with no ... ok
Test that a KineticsData object can be reconstructed from its repr() ... ok
Test that the PDepKineticsData Pdata property was properly set. ... ok
Test that the PDepKineticsData Pmax property was properly set. ... ok
Test that the PDepKineticsData Pmin property was properly set. ... ok
Test that the PDepKineticsData Tdata property was properly set. ... ok
Test that the PDepKineticsData Tmax property was properly set. ... ok
Test that the PDepKineticsData Tmin property was properly set. ... ok
Test that the PDepKineticsData comment property was properly set. ... ok
Test the PDepKineticsData.getRateCoefficient() method. ... ok
Test the PDepKineticsData.isPressureValid() method. ... ok
Test the PDepKineticsData.isTemperatureValid() method. ... ok
Test that the PDepKineticsData kdata property was properly set. ... ok
Test that a PDepKineticsData object can be pickled and unpickled with no ... ok
Test that a PDepKineticsData object can be reconstructed from its repr() ... ok
Test the conversion of first-order rate coefficient units to an integer ... ok
Test the conversion of second-order rate coefficient units to an integer ... ok
Test the conversion of third-order rate coefficient units to an integer ... ok
Test the conversion of zeroth-order rate coefficient units to an integer ... ok
Test the conversion of a reaction order of one to rate coefficient ... ok
Test the conversion of a reaction order of two to rate coefficient ... ok
Test the conversion of a reaction order of three to rate coefficient ... ok
Test the conversion of a reaction order of zero to rate coefficient ... ok
Test that the Eckart E0_TS property was properly set. ... ok
Test that the Eckart E0_prod property was properly set. ... ok
Test that the Eckart E0_reac property was properly set. ... ok
Test the Eckart.calculateTunnelingFactor() method. ... ok
Test that the Eckart frequency property was properly set. ... ok
Test that an Eckart object can be successfully pickled and ... ok
Test that an Eckart object can be successfully reconstructed ... ok
Test the Wigner.calculateTunnelingFactor() method. ... ok
Test that the Wigner frequency property was properly set. ... ok
Test that a Wigner object can be successfully pickled and unpickled ... ok
Test that a Wigner object can be successfully reconstructed from its ... ok
adjlist: Test the Group.fromAdjacencyList() method. ... ok
testFromAdjacencyList_multiplicity (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
testFromAdjacencyList_multiplicity_list (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
adjlist: Test the Group.fromAdjacencyList() method on an old style adjacency list. ... ok
adjlist: Test the Group.toAdjacencyList() method. ... ok
adjlist: Check the adjacency list read/write functions for a full molecule. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 1. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 2. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 3. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 4. ... ok
Test we can read an intermediate style adjacency list with implicit hydrogens 1 ... ok
Test we can read an old style adjacency list with implicit hydrogens 1 ... ok
adjlist: Test that the adjlist reading and writing works with Helium. ... ok
adjlist: Test that improperly formed adjlists raise an InvalidAdjacencyListError. ... ok
adjlist: Test the Molecule.toAdjacencyList() method. ... ok
adjlist: Test that molecule adjlists containing wildcards raise an InvalidAdjacencyListError. ... ok
Test the AtomType.equivalent() method. ... ok
Test the AtomType.isSpecificCaseOf() method. ... ok
Test that we can reconstruct an AtomType object from its repr() ... ok
Test that an AtomType object can be successfully pickled and ... ok
Test the AtomType.setActions() method. ... ok
Test that getAtomType() returns appropriate carbon atom types. ... ok
Test that getAtomType() returns the hydrogen atom type. ... ok
Test that getAtomType() returns appropriate nitrogen atom types. ... ok
Test that getAtomType() returns appropriate types for other misc inerts. ... ok
Test that getAtomType() returns appropriate oxygen atom types. ... ok
Test that getAtomType() returns appropriate silicon atom types. ... ok
Test that getAtomType() returns appropriate sulfur atom types. ... ok
Test we can create PDF files from molecules. ... ok
Test we can create PDF surface without a temporary file (newer versions of PyCairo?) ... ok
Test we can create PNG files from molecules. ... ok
Test we can draw a polycyclic molecule ... ok
Test the rmgpy.elements.getElement() method. ... ok
Test that we can reconstruct an Element object from its repr() ... ok
Test that an Element object can be successfully pickled and ... ok
Test the Graph.addEdge() method. ... ok
Test the Graph.addVertex() method. ... ok
Test the graph copy function to ensure a complete copy of the graph is ... ok
Test the Graph.getAllCycles() method. ... ok
test_getAllCyclicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
test_getAllPolycylicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
Test the Graph.getEdge() method. ... ok
Test the Graph.getEdges() method. ... ok
Test the Graph.getSmallestSetOfSmallestRings() method. ... ok
Test the Graph.hasEdge() method. ... ok
Test the Graph.hasVertex() method. ... ok
Test the Graph.isCyclic() method. ... ok
Test the Graph.isEdgeInCycle() method. ... ok
Test the Graph.isVertexInCycle() method. ... ok
Check the graph isomorphism functions. ... ok
Test the graph merge function to ensure a proper merging of the graph ... ok
Test that a Graph object can be successfully pickled and unpickled ... ok
Test the Graph.removeEdge() method. ... ok
Test the Graph.removeVertex() method. ... ok
Test the Graph.resetConnectivityValues() method. ... ok
Test the Graph.sortVertices() method. ... ok
Test the graph split function to ensure a proper splitting of the graph ... ok
Check the subgraph isomorphism functions. ... ok
Test the Graph.updateConnectivityValues() method. ... ok
Tests the vertex connectivity values as introduced by Morgan (1965). ... ok
Test the Group.clearLabeledAtoms() method. ... ok
Test the Group.containsLabeledAtom() method. ... ok
Test the Group.findIsomorphism() method. ... ok
Test the Group.findSubgraphIsomorphisms() method. ... ok
Test the Group.fromAdjacencyList() method. ... ok
Test the Group.getLabeledAtom() method. ... ok
Test the Group.getLabeledAtoms() method. ... ok
Test the Group.isIsomorphic() method. ... ok
Test the Group.isSubgraphIsomorphic() method. ... ok
Test that a Group object can be successfully pickled and ... ok
Test the Group.toAdjacencyList() method. ... ok
Test the GroupAtom.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a FORM_BOND action. ... ok
Test the GroupAtom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupAtom.copy() method. ... ok
Test the GroupAtom.equivalent() method. ... ok
Test the GroupAtom.isSpecificCaseOf() method. ... ok
Test that a GroupAtom object can be successfully pickled and ... ok
Test the GroupBond.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a FORM_BOND action. ... ok
Test the GroupBond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupBond.copy() method. ... ok
Test the GroupBond.equivalent() method. ... ok
Test the GroupBond.isSpecificCaseOf() method. ... ok
Test that a GroupBond object can be successfully pickled and ... ok
Test the Atom.applyAction() method for a BREAK_BOND action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a FORM_BOND action. ... ok
Test the Atom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Atom.copy() method. ... ok
Test the Atom.decrementRadical() method. ... ok
Test the Atom.equivalent() method. ... ok
Test the Atom.incrementRadical() method. ... ok
Test the Atom.isCarbon() method. ... ok
Test the Atom.isHydrogen() method. ... ok
Test the Atom.isNonHydrogen() method. ... ok
Test the Atom.isOxygen() method. ... ok
Test the Atom.isSpecificCaseOf() method. ... ok
Test the Atom.mass property. ... ok
Test the Atom.number property. ... ok
Test that a Atom object can be successfully pickled and ... ok
Test the Atom.symbol property. ... ok
Test the Bond.applyAction() method for a BREAK_BOND action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a FORM_BOND action. ... ok
Test the Bond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Bond.copy() method. ... ok
Test the Bond.decrementOrder() method. ... ok
Test the GroupBond.equivalent() method. ... ok
Test the Bond.incrementOrder() method. ... ok
Test the Bond.isBenzene() method. ... ok
Test the Bond.isDouble() method. ... ok
Test the Bond.isSingle() method. ... ok
Test the Bond.isSpecificCaseOf() method. ... ok
Test the Bond.isTriple() method. ... ok
Test that a Bond object can be successfully pickled and ... ok
Check the adjacency list read/write functions for a full molecule. ... ok
Test the Molecule.isAromatic() method for Benzene. ... SKIP: WIP test failed: False is not true
Test the Molecule.isAromatic() method for Cyclohexane. ... ok
Test the Molecule.isAromatic() method for Naphthalene. ... SKIP: WIP test failed: False is not true
Test that Augmented InChI generation is printing the /mult layer ... ok
Test that Augmented InChI Key generation is printing the mult layer ... ok
Test the Molecule.clearLabeledAtoms() method. ... ok
Test the Molecule.containsLabeledAtom() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method for dimethylacetylene. ... SKIP: WIP test failed: 2 != 1
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.fromAdjacencyList() method. ... ok
Make sure that H radical is produced properly from its InChI ... ok
Make sure that H radical is produced properly from its SMILES ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getLabeledAtom() method. ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getMolecularWeight() method. ... ok
Test that InChI Key generation is working properly. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Check the graph isomorphism functions. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test that a Molecule object can be successfully pickled and ... ok
Test that the species [CH] has three radical electrons and a spin multiplicity of 4. ... ok
Test that the species [CH2] has two radical electrons and a spin multiplicity of 3. ... ok
Test radical count on [CH2]C[CH2] ... ok
Test the Molecule.getRadicalCount() method. ... ok
Test that we can generate a few SMILES strings as expected ... ok
Test the Molecule.getSmallestSetOfSmallestRings() method with a complex ... ok
Check the graph isomorphism functions. ... ok
testSubgraphIsomorphismAgain (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
testSubgraphIsomorphismManyLabels (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
Test the Molecule.toAdjacencyList() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 4
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 2
Test the Molecule.calculateCyclicSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 2
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... SKIP: WIP test failed: 9 != '36?'
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the SingleExponentialDown.T0 attribute. ... ok
Test the SingleExponentialDown.sigma attribute. ... ok
Test the SingleExponentialDown.getAlpha() method. ... ok
Test the SingleExponentialDown.n attribute. ... ok
Test that a SingleExponentialDown object can be successfully pickled ... ok
Test that a SingleExponentialDown object can be successfully ... ok
Test that the network `bathGas` property was properly set. ... ok
Test that the Network.initialize() method. ... ok
Test that the network `isomers` property was properly set. ... ok
Test that the network `label` property was properly set. ... ok
Test that the network `netReactions` property was properly set. ... ok
Test that the network `pathReactions` property was properly set. ... ok
Test that the network `products` property was properly set. ... ok
Test that the network `reactants` property was properly set. ... ok
Test that generateThermoData() works correctly. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from a previous run. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() works correctly. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from a previous run. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that checkPaths() works correctly. ... ok
Test that getThermoData() fails when expected. ... ok
Test that getThermoData() works correctly. ... SKIP: If GAUSSIAN installed, try checking your environment variables.
Test that getThermoData() works correctly. ... SKIP: If MOPAC installed, try checking your environment variables.
Test that initialize() works correctly. ... ok
Test that setDefaultOutputDirectory() works correctly. ... ok
Test that checkAllSet() works correctly. ... ok
Test that generateThermoData() works correctly. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from a previous run. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() works correctly. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from a previous run. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() works correctly. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from a previous run. ... SKIP: MOPAC not found. Try resetting your environment variables if you want to use it.
Test the creation of an acceleration quantity with units of cm/s^2. ... ok
Test the creation of an acceleration quantity with units of m/s^2. ... ok
Test the creation of an area quantity with units of m^2. ... ok
Test the creation of an area quantity with units of m^2. ... ok
Test the creation of an concentration quantity with units of molecules/m^3. ... ok
Test the creation of an concentration quantity with units of mol/m^3. ... ok
Test the creation of an concentration quantity with units of m^-3. ... ok
Test the creation of a dipole moment quantity with units of C*m. ... ok
Test the creation of a dipole moment quantity with units of J/mol. ... ok
Test the creation of an energy quantity with units of J. ... ok
Test the creation of an energy quantity with units of J/mol. ... ok
Test the creation of an energy quantity with units of cal. ... ok
Test the creation of an energy quantity with units of cal/mol. ... ok
Test the creation of an energy quantity with units of kJ. ... ok
Test the creation of an energy quantity with units of kJ/mol. ... ok
Test the creation of an energy quantity with units of kcal. ... ok
Test the creation of an energy quantity with units of kcal/mol. ... ok
Test the creation of a flux quantity with units of molecules/(m^2*s). ... ok
Test the creation of a flux quantity with units of mol/(m^2*s). ... ok
Test the creation of a flux quantity with units of m^-2*s^-1. ... ok
Test the creation of an force quantity with units of N. ... ok
Test the creation of a frequency quantity with units of GHz. ... ok
Test the creation of a frequency quantity with units of Hz. ... ok
Test the creation of a frequency quantity with units of K. ... ok
Test the creation of a frequency quantity with units of MHz. ... ok
Test the creation of a frequency quantity with units of cm^-1. ... ok
Test the creation of a frequency quantity with units of eV. ... ok
Test the creation of a frequency quantity with units of kHz. ... ok
Test the creation of a frequency quantity with units of s^-1. ... ok
Test the creation of a heat capacity quantity with units of J/K. ... ok
Test the creation of a heat capacity quantity with units of J/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of cal/K. ... ok
Test the creation of a heat capacity quantity with units of cal/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of kJ/K. ... ok
Test the creation of a heat capacity quantity with units of kJ/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of kcal/K. ... ok
Test the creation of a heat capacity quantity with units of kcal/(mol*K). ... ok
Test the creation of a moment of inertia quantity with units of amu*angstrom^2. ... ok
Test the creation of a moment of inertia quantity with units of kg*m^2. ... ok
Test the creation of a length quantity with units of cm. ... ok
Test the creation of a length quantity with units of km. ... ok
Test the creation of a length quantity with units of m. ... ok
Test the creation of a length quantity with units of mm. ... ok
Test the creation of a length quantity with units of nm. ... ok
Test the creation of a length quantity with units of pm. ... ok
Test the creation of a length quantity with units of um. ... ok
Test the creation of a mass quantity with units of amu. ... ok
Test the creation of a mass quantity with units of g/mol. Note that ... ok
Test the creation of a mass quantity with units of kg. ... ok
Test the creation of a mass quantity with units of kg/mol. Note that ... ok
Test the creation of a momentum quantity with units of kg*m/s^2. ... ok
Test the creation of a power quantity with units of W. ... ok
Test the creation of a pressure quantity with units of Pa. ... ok
Test the creation of a pressure quantity with units of atm. ... ok
Test the creation of a pressure quantity with units of bar. ... ok
Test the creation of a pressure quantity with units of psi. ... ok
Test the creation of a pressure quantity with units of torr. ... ok
Test the creation of a rate coefficient quantity with units of cm^3/(molecule*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^3/(mol*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^6/(mol^2*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^6/(molecule^2*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^9/(mol^3*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^9/(molecule^3*s). ... ok
Test the creation of a rate coefficient quantity with units of m^3/(mol*s). ... ok
Test the creation of a rate coefficient quantity with units of m^6/(mol^2*s). ... ok
Test the creation of a rate coefficient quantity with units of m^9/(mol^3*s). ... ok
Test the creation of a rate coefficient quantity with units of s^-1. ... ok
Test the creation of a temperature quantity with units of K. ... ok
Test the creation of a temperature quantity with units of degrees C. ... ok
Test the creation of a temperature quantity with units of degrees F. ... ok
Test the creation of a temperature quantity with units of degrees R. ... ok
Test the creation of a time quantity with units of fs. ... ok
Test the creation of a time quantity with units of hr. ... ok
Test the creation of a time quantity with units of min. ... ok
Test the creation of a time quantity with units of ms. ... ok
Test the creation of a time quantity with units of ns. ... ok
Test the creation of a time quantity with units of ps. ... ok
Test the creation of a time quantity with units of s. ... ok
Test the creation of a time quantity with units of us. ... ok
Test the creation of an velocity quantity with units of m/s. ... ok
Test the creation of an velocity quantity with units of m/s. ... ok
Test the creation of an volume quantity with units of L. ... ok
Test the creation of an volume quantity with units of m^3. ... ok
Test the Reaction.getEnthalpyOfReaction() method. ... ok
Test the Reaction.getEntropyOfReaction() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test the Reaction.getFreeEnergyOfReaction() method. ... ok
Test the Reaction.generateReverseRateCoefficient() method. ... ok
Test the Reaction.hasTemplate() method. ... ok
Test the Reaction.isAssociation() method. ... ok
Test the Reaction.isDissociation() method. ... ok
Test the Reaction.isIsomerization() method. ... ok
Test that a Reaction object can be successfully reconstructed ... ok
Test that a Reaction object can be successfully pickled and ... ok
Test the Reaction.getRateCoefficient() method. ... ok
Test the Reaction.getStoichiometricCoefficient() method. ... ok
A test of the transition state theory k(T) calculation function, ... ok
test1to1 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test1to2 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test2to2 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test2to3 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
Failure: ValueError (rmgpy.solver.base.ReactionSystem has the wrong size, try recompiling) ... ERROR
Failure: ImportError (cannot import name SimpleReactor) ... ERROR
Failure: ImportError (cannot import name SimpleReactor) ... ERROR
Test that a Species object can be reconstructed from its repr(). ... ok
Test that a Species object can be pickled and unpickled. ... ok
Test a key-value pair is added to the props attribute of Species. ... ok
Test that Species's props dictionaries are independent of each other. ... ok
Test that toAdjacencyList() works as expected. ... ok
Test the Conformer.getCenterOfMass() method. ... ok
Test the StatMech.getDensityOfStates() method for ethylene. ... ok
Test the StatMech.getDensityOfStates() method for oxygen. ... ok
Test the StatMech.getEnthalpy() method for ethylene. ... ok
Test the StatMech.getEnthalpy() method for oxygen. ... ok
Test the StatMech.getEntropy() method for ethylene. ... ok
Test the StatMech.getEntropy() method for oxygen. ... ok
Test the StatMech.getHeatCapacity() method for ethylene. ... ok
Test the StatMech.getHeatCapacity() method for oxygen. ... ok
Test the Conformer.getInternalReducedMomentOfInertia() method. ... ok
Test the Conformer.getMomentOfInertiaTensor() method. ... ok
Test the Conformer.getNumberDegreesOfFreedom() method. ... ok
Test the StatMech.getPartitionFunction() method for ethylene. ... ok
Test the StatMech.getPartitionFunction() method for oxygen. ... ok
Test the Conformer.getPrincipalMomentsOfInertia() method. ... ok
Test the StatMech.getSumOfStates() method for ethylene. ... ok
Test the StatMech.getSumOfStates() method for oxygen. ... ok
Test the Conformer.getTotalMass() method. ... ok
Test the KRotor.getDensityOfStates() method using a classical ... ok
Test the KRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the KRotor.getEnthalpy() method using a classical rotor. ... ok
Test the KRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the KRotor.getEntropy() method using a classical rotor. ... ok
Test the KRotor.getEntropy() method using a quantum rotor. ... ok
Test the KRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the KRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the KRotor.getLevelDegeneracy() method. ... ok
Test the KRotor.getLevelEnergy() method. ... ok
Test the KRotor.getPartitionFunction() method for a classical ... ok
Test the KRotor.getPartitionFunction() method for a quantum ... ok
Test getting the KRotor.rotationalConstant property. ... ok
Test the KRotor.getSumOfStates() method using a classical rotor. ... ok
Test the KRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a KRotor object can be pickled and unpickled with no loss ... ok
Test that a KRotor object can be reconstructed from its repr() output ... ok
Test setting the KRotor.rotationalConstant property. ... ok
Test the LinearRotor.getDensityOfStates() method using a classical ... ok
Test the LinearRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the LinearRotor.getEnthalpy() method using a classical rotor. ... ok
Test the LinearRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the LinearRotor.getEntropy() method using a classical rotor. ... ok
Test the LinearRotor.getEntropy() method using a quantum rotor. ... ok
Test the LinearRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the LinearRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the LinearRotor.getLevelDegeneracy() method. ... ok
Test the LinearRotor.getLevelEnergy() method. ... ok
Test the LinearRotor.getPartitionFunction() method for a classical ... ok
Test the LinearRotor.getPartitionFunction() method for a quantum ... ok
Test getting the LinearRotor.rotationalConstant property. ... ok
Test the LinearRotor.getSumOfStates() method using a classical rotor. ... ok
Test the LinearRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a LinearRotor object can be pickled and unpickled with no ... ok
Test that a LinearRotor object can be reconstructed from its repr() ... ok
Test setting the LinearRotor.rotationalConstant property. ... ok
Test the NonlinearRotor.getDensityOfStates() method using a classical ... ok
Test the NonlinearRotor.getEnthalpy() method using a classical rotor. ... ok
Test the NonlinearRotor.getEntropy() method using a classical rotor. ... ok
Test the NonlinearRotor.getHeatCapacity() method using a classical ... ok
Test the NonlinearRotor.getPartitionFunction() method for a classical ... ok
Test getting the NonlinearRotor.rotationalConstant property. ... ok
Test the NonlinearRotor.getSumOfStates() method using a classical rotor. ... ok
Test that a NonlinearRotor object can be pickled and unpickled with ... ok
Test that a NonlinearRotor object can be reconstructed from its ... ok
Test setting the NonlinearRotor.rotationalConstant property. ... ok
Test the SphericalTopRotor.getDensityOfStates() method using a classical ... ok
Test the SphericalTopRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getEnthalpy() method using a classical rotor. ... ok
Test the SphericalTopRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getEntropy() method using a classical rotor. ... ok
Test the SphericalTopRotor.getEntropy() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the SphericalTopRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getLevelDegeneracy() method. ... ok
Test the SphericalTopRotor.getLevelEnergy() method. ... ok
Test the SphericalTopRotor.getPartitionFunction() method for a classical ... ok
Test the SphericalTopRotor.getPartitionFunction() method for a quantum ... ok
Test getting the SphericalTopRotor.rotationalConstant property. ... ok
Test the SphericalTopRotor.getSumOfStates() method using a classical rotor. ... ok
Test the SphericalTopRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a SphericalTopRotor object can be pickled and unpickled ... ok
Test that a SphericalTopRotor object can be reconstructed from its ... ok
Test setting the SphericalTopRotor.rotationalConstant property. ... ok
Test the getDensityOfStates() method. ... ok
Test the getEnthalpy() method. ... ok
Test the getEntropy() method. ... ok
Test the getHeatCapacity() method. ... ok
Test the getPartitionFunction() method. ... ok
Test the HinderedRotor.getDensityOfStates() method using a classical ... ok
Test the HinderedRotor.getDensityOfStates() method using a Fourier ... ok
Test the HinderedRotor.getDensityOfStates() method using a classical ... ok
Test the HinderedRotor.getDensityOfStates() method using a Fourier ... ok
Test the HinderedRotor.getEnthalpy() method using a cosine potential ... ok
Test the HinderedRotor.getEnthalpy() method using a Fourier series ... ok
Test the HinderedRotor.getEnthalpy() method using a cosine potential ... ok
Test the HinderedRotor.getEnthalpy() method using a Fourier series ... ok
Test the HinderedRotor.getEntropy() method using a cosine potential ... ok
Test the HinderedRotor.getEntropy() method using a Fourier series ... ok
Test the HinderedRotor.getEntropy() method using a cosine potential ... ok
Test the HinderedRotor.getEntropy() method using a Fourier series ... ok
Test the HinderedRotor.getHeatCapacity() method using a cosine ... ok
Test the HinderedRotor.getHeatCapacity() method using a Fourier series ... ok
Test the HinderedRotor.getHeatCapacity() method using a cosine ... ok
Test the HinderedRotor.getHeatCapacity() method using a Fourier series ... ok
Test the HinderedRotor.getPartitionFunction() method for a cosine ... ok
Test the HinderedRotor.getPartitionFunction() method for a Fourier ... ok
Test the HinderedRotor.getPartitionFunction() method for a cosine ... ok
Test the HinderedRotor.getPartitionFunction() method for a Fourier ... ok
Test the HinderedRotor.getPotential() method for a cosine potential. ... ok
Test the HinderedRotor.getPotential() method for a Fourier series ... ok
Test getting the HinderedRotor.rotationalConstant property. ... ok
Test the HinderedRotor.getSumOfStates() method using a cosine potential ... ok
Test the HinderedRotor.getSumOfStates() method using a Fourier series ... ok
Test the HinderedRotor.getSumOfStates() method using a cosine potential ... ok
Test the HinderedRotor.getSumOfStates() method using a Fourier series ... ok
Test that a HinderedRotor object can be pickled and unpickled with no ... ok
Test that a HinderedRotor object can be reconstructed from its repr() ... ok
Test setting the HinderedRotor.rotationalConstant property. ... ok
Test the IdealGasTranslation.getDensityOfStates() method using a ... ok
Test the IdealGasTranslation.getEnthalpy() method using a classical ... ok
Test the IdealGasTranslation.getEntropy() method using a classical ... ok
Test the IdealGasTranslation.getHeatCapacity() method using a classical ... ok
Test the IdealGasTranslation.getPartitionFunction() method for a ... ok
Test the IdealGasTranslation.getSumOfStates() method using a classical ... ok
Test that a IdealGasTranslation object can be pickled and unpickled ... ok
Test that an IdealGasTranslation object can be reconstructed from its ... ok
Test the HarmonicOscillator.getDensityOfStates() method using a set of ... ok
Test the HarmonicOscillator.getDensityOfStates() method using a set of ... ok
Test the HarmonicOscillator.getEnthalpy() method using a set of ... ok
Test the HarmonicOscillator.getEnthalpy() method using a set of quantum ... ok
Test the HarmonicOscillator.getEntropy() method using a set of ... ok
Test the HarmonicOscillator.getEntropy() method using a set of quantum ... ok
Test the HarmonicOscillator.getHeatCapacity() method using a set of ... ok
Test the HarmonicOscillator.getHeatCapacity() method using a set of ... ok
Test the HarmonicOscillator.getPartitionFunction() method for a set of ... ok
Test the HarmonicOscillator.getPartitionFunction() method for a set of ... ok
Test the HarmonicOscillator.getSumOfStates() method using a set of ... ok
Test the HarmonicOscillator.getSumOfStates() method using a set of ... ok
Test that a HarmonicOscillator object can be pickled and unpickled ... ok
Test that a HarmonicOscillator object can be reconstructed from its ... ok
Test round-trip conversion from Wilhoit to NASA and back ... ok
Test round-trip conversion from Wilhoit to ThermoData and back ... ok
Test the conversion of a NASA model to a ThermoData model. ... ok
Test the conversion of a NASA model to a Wilhoit model. ... ok
Test the conversion of a ThermoData model to a NASA model. ... ok
Test the conversion of a ThermoData model to a Wilhoit model. ... ok
Test the conversion of a Wilhoit model to a NASA model. ... ok
Test the conversion of a Wilhoit model to a ThermoData model. ... ok
Test that the NASA comment property was properly set. ... ok
Test that the NASA E0 property was properly set. ... ok
Test that the NASA Tmax property was properly set. ... ok
Test that the NASA Tmin property was properly set. ... ok
Test the NASA.getEnthalpy() method. ... ok
Test the NASA.getEntropy() method. ... ok
Test the NASA.getFreeEnergy() method. ... ok
Test the NASA.getHeatCapacity() method. ... ok
Test the NASA.isTemperatureValid() method. ... ok
Test that a NASA object can be pickled and unpickled with no loss of ... ok
Test that the NASA high-temperature polynomial was properly set. ... ok
Test that the NASA low-temperature polynomial was properly set. ... ok
Test that a NASA object can be reconstructed from its repr() output ... ok
Test that the ThermoData comment property was properly set. ... ok
Test that the ThermoData Cp0 property was properly set. ... ok
Test that the ThermoData CpInf property was properly set. ... ok
Test that the ThermoData Cpdata property was properly set. ... ok
Test that the ThermoData E0 property was properly set. ... ok
Test that the ThermoData H298 property was properly set. ... ok
Test that the ThermoData S298 property was properly set. ... ok
Test that the ThermoData Tdata property was properly set. ... ok
Test that the ThermoData Tmax property was properly set. ... ok
Test that the ThermoData Tmin property was properly set. ... ok
Test the ThermoData.getEnthalpy() method. ... ok
Test the ThermoData.getEntropy() method. ... ok
Test the ThermoData.getFreeEnergy() method. ... ok
Test the ThermoData.getHeatCapacity() method. ... ok
Test the ThermoData.isTemperatureValid() method. ... ok
Test that a ThermoData object can be successfully pickled and ... ok
Test that a ThermoData object can be successfully reconstructed from its ... ok
Test that the Wilhoit B property was properly set. ... ok
Test that the Wilhoit Cp0 property was properly set. ... ok
Test that the Wilhoit CpInf property was properly set. ... ok
Test that the Wilhoit E0 property is properly calculated from Enthalpy at 0.001 K ... ok
Test that the Wilhoit H0 property was properly set. ... ok
Test that the Wilhoit S0 property was properly set. ... ok
Test that the Wilhoit Tmax property was properly set. ... ok
Test that the Wilhoit Tmin property was properly set. ... ok
Test that the Wilhoit a0 property was properly set. ... ok
Test that the Wilhoit a1 property was properly set. ... ok
Test that the Wilhoit a2 property was properly set. ... ok
Test that the Wilhoit a3 property was properly set. ... ok
Test that the Wilhoit comment property was properly set. ... ok
Test the Wilhoit.fitToData() method. ... ok
Test the Wilhoit.getEnthalpy() method. ... ok
Test the Wilhoit.getEntropy() method. ... ok
Test the Wilhoit.getFreeEnergy() method. ... ok
Test the Wilhoit.getHeatCapacity() method. ... ok
Test the Wilhoit.isTemperatureValid() method. ... ok
Test that a Wilhoit object can be pickled and unpickled with no loss ... ok
Test that a Wilhoit object can be reconstructed from its repr() output ... ok
Test that the CriticalPointGroupContribution Pc property was properly set. ... ok
Test that the CriticalPointGroupContribution Tb property was properly set. ... ok
Test that the CriticalPointGroupContribution Tc property was properly set. ... ok
Test that the CriticalPointGroupContribution Vc property was properly set. ... ok
Test that a CriticalPointGroupContribution object can be pickled and unpickled with no loss of information. ... ok
Test that a CriticalPointGroupContribution object can be reconstructed from its repr() output with no loss of information ... ok
Test that the CriticalPointGroupContribution structureIndex property was properly set. ... ok
Test that the TransportData comment property was properly set. ... ok
Test that the TransportData dipoleMoment property was properly set. ... ok
Test that the TransportData epsilon property was properly set. ... ok
Test the LennardJones.getCollisionFrequency() method. ... ok
Test that a TransportData object can be pickled and unpickled with no loss of information. ... ok
Test that the TransportData polarizability property was properly set. ... ok
Test that a TransportData object can be reconstructed from its repr() output with no loss of information ... ok
Test that the TransportData rotrelaxcollnum property was properly set. ... ok
Test that the TransportData shapeIndex property was properly set. ... ok
Test that the TransportData sigma property was properly set. ... ok
testJoback (rmgpy.transportDataTest.TestTransportDatabase) ... ok
Test Joback doesn't crash on Cb desription of beneze ... ok

======================================================================
ERROR: Failure: ValueError (rmgpy.solver.base.ReactionSystem has the wrong size, try recompiling)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/loader.py", line 390, in loadTestsFromName
    addr.filename, addr.module)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 39, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 86, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/export/thishost/comocheng/build/greengroup-rmg-py/rmgpy/rmg/input.py", line 41, in <module>
    from rmgpy.solver.base import TerminationTime, TerminationConversion
  File "/export/thishost/comocheng/build/greengroup-rmg-py/rmgpy/solver/__init__.py", line 32, in <module>
    from .simple import SimpleReactor
  File "rmgpy/solver/simple.pyx", line 1, in init rmgpy.solver.simple (build/pyrex/rmgpy/solver/simple.c:20050)
    ################################################################################
ValueError: rmgpy.solver.base.ReactionSystem has the wrong size, try recompiling

======================================================================
ERROR: Failure: ImportError (cannot import name SimpleReactor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/loader.py", line 390, in loadTestsFromName
    addr.filename, addr.module)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 39, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 86, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/export/thishost/comocheng/build/greengroup-rmg-py/rmgpy/rmg/main.py", line 50, in <module>
    from rmgpy.solver.base import TerminationTime, TerminationConversion
  File "/export/thishost/comocheng/build/greengroup-rmg-py/rmgpy/solver/__init__.py", line 32, in <module>
    from .simple import SimpleReactor
ImportError: cannot import name SimpleReactor

======================================================================
ERROR: Failure: ImportError (cannot import name SimpleReactor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/loader.py", line 390, in loadTestsFromName
    addr.filename, addr.module)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 39, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File "/export/thishost/comocheng/virtualenvs/rmgweb/local/lib/python2.7/site-packages/nose/importer.py", line 86, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File "/export/thishost/comocheng/build/greengroup-rmg-py/rmgpy/solver/__init__.py", line 32, in <module>
    from .simple import SimpleReactor
ImportError: cannot import name SimpleReactor

Name                              Stmts   Miss Branch BrMiss  Cover   Missing
-----------------------------------------------------------------------------
rmgpy                                55     16     18     10    64%   71, 79-82, 104-107, 113, 115, 119, 131-135
rmgpy.cantherm                        5      0      0      0   100%   
rmgpy.cantherm.common                 9      4      2      2    45%   43-46
rmgpy.cantherm.gaussian             219    124    112     68    42%   57-72, 85-111, 120-162, 299, 303, 310-337, 345-399, 407-423
rmgpy.cantherm.geometry              74     25     14      4    67%   93, 102-103, 130-148, 156-159, 191, 193
rmgpy.cantherm.input                223     56    100     40    70%   68, 76-78, 108-111, 125, 132-134, 155, 166-168, 174, 176, 179-180, 192, 198, 205-207, 221, 223, 227, 231-235, 259-260, 266-273, 277-282, 307, 367-369, 373, 382-386
rmgpy.cantherm.kinetics             122     93     32     28    21%   56, 61, 68-71, 75-80, 90, 93, 98, 101, 106, 109, 117-124, 131-155, 162-212, 222-243
rmgpy.cantherm.main                  94     67     10     10    26%   45-46, 89-130, 139-168, 174-187, 193-194, 214-238
rmgpy.cantherm.molepro               33      2     18      4    88%   64, 87
rmgpy.cantherm.output                77     66     23     23    11%   47-49, 56-75, 81-94, 101-121, 127-141, 147-149, 155-158, 168-173
rmgpy.cantherm.pdep                 405    320    158    155    16%   117, 128, 179, 204, 224-238, 255-266, 270-299, 311-328, 332-364, 368-384, 388-485, 490-554, 564-573, 580-693
rmgpy.cantherm.qchem                221    205    102    102     5%   47, 56-71, 81-106, 115-180, 191-279, 287-314, 321-346, 353-387, 395-409
rmgpy.cantherm.statmech             528    498    238    238     4%   83, 90-121, 129-146, 151, 161-166, 173-175, 184-404, 408-414, 423-454, 462-492, 509-679, 690-890
rmgpy.cantherm.thermo               155    140     32     32     8%   55-56, 63-67, 75-122, 129-205, 217-269
rmgpy.chemkin                       985    940    493    492     3%   69, 79-156, 167-253, 260-361, 368-493, 504-653, 664-684, 690-703, 710-725, 734-893, 905-947, 961-1019, 1029-1177, 1185-1195, 1207-1257, 1268-1332, 1340-1386, 1403-1560, 1570-1586, 1596-1599, 1607-1613, 1635-1658, 1677-1723, 1731-1762
rmgpy.data                            3      1      0      0    67%   34
rmgpy.data.base                     690    465    313    238    30%   43-45, 209-211, 227-248, 254-271, 278-305, 313-339, 350-368, 381-437, 446, 458, 465, 475-476, 479, 499-509, 516-546, 555-610, 617-625, 633-726, 733-739, 746-758, 765-799, 809, 815-821, 827-832, 841-845, 854-867, 907, 909, 920-925, 959, 961, 972, 977, 992, 999-1003, 1020, 1031-1037, 1044-1053, 1064-1071, 1089, 1099, 1121-1124, 1147-1151, 1163-1167, 1189-1206, 1212-1213, 1219, 1227-1240, 1254-1275
rmgpy.data.kinetics                 330    268    163    146    16%   86-91, 97-99, 106-108, 118-133, 147-157, 161-163, 165-167, 174-176, 182, 190-195, 205-231, 238-242, 249-263, 270-274, 281-288, 295-314, 321-356, 364-367, 375-380, 388-403, 416-425, 446-544, 557-603
rmgpy.data.kinetics.common           84     72     38     38    10%   105-106, 115-222
rmgpy.data.kinetics.depository       58     42     16     16    22%   65-78, 84, 103, 116, 119, 125-160, 191-206, 212
rmgpy.data.kinetics.family          953    884    538    538     5%   96-109, 115, 134, 162, 170, 178-194, 205-287, 294, 301, 347-358, 368-428, 435-470, 476-487, 493-516, 529-608, 616-617, 624-628, 634-636, 642, 650-653, 660-661, 669-716, 727-811, 818, 825-828, 835-936, 945-948, 955-958, 966-977, 990-1093, 1108-1225, 1232-1237, 1247-1273, 1282-1291, 1303-1338, 1345-1352, 1366-1570, 1578-1657, 1665, 1674-1679, 1689-1697, 1707-1721, 1729-1732, 1745-1799, 1807-1815, 1822-1830, 1838-1843
rmgpy.data.kinetics.groups          297    273    180    180     5%   78-79, 85-89, 108-174, 184-210, 219-271, 284-552
rmgpy.data.kinetics.library         265    239    146    146     6%   71-84, 90, 108, 118, 121, 131-138, 146-155, 162-217, 221-255, 279-301, 307, 313-346, 356-360, 370-531
rmgpy.data.kinetics.rules           296    266    121    121     7%   64, 83-98, 104, 112-160, 167-193, 201-249, 257-324, 331-338, 345, 352, 359-372, 379-395, 401-460, 471-497, 504-558
rmgpy.data.reference                138    114     48     48    13%   89-95, 102-108, 114-132, 158-162, 169-183, 190-200, 226-231, 238-251, 258-269, 292-294, 301-311, 318-326
rmgpy.data.rmg                       86     65     14     14    21%   56-71, 92-104, 111-112, 119-120, 127-128, 141-156, 167-168, 175-176, 183-192, 198-205, 211-216
rmgpy.data.solvation                385    158     76     40    57%   56-128, 181, 252, 302, 330-335, 358, 365, 372, 413, 421, 428, 452-457, 463-465, 506-509, 516-518, 525-527, 535-550, 566-579, 617-629, 706-747, 758-762, 781, 795-799
rmgpy.data.statmech                 298    247    107    107    13%   48-86, 93-96, 103-111, 122, 135-137, 152, 162, 174, 189, 196, 203, 214, 226-234, 249, 256, 263, 270-277, 286-301, 311-347, 356-437, 447-459, 465-471, 477-480, 487-492, 499-500, 507-519, 526-528, 535-539, 546-548, 555-557, 564-566, 574-591, 608-621, 634-642, 650-655, 663-666, 675, 688-689, 697-704
rmgpy.data.statmechfit              248    213     70     70    11%   95-137, 151-193, 207-244, 260-307, 316-319, 327-330, 338-343, 352-355, 364-366, 378-381, 384-407, 419-422, 425-457, 469-472, 475-506
rmgpy.data.thermo                   448    345    138    124    20%   56-124, 131-149, 169, 188-199, 205, 232, 236-237, 254, 261, 268, 309, 317, 324, 350-356, 362-365, 375, 405, 427-431, 438-440, 447-449, 456-463, 471-538, 553-564, 574-617, 634-649, 660-668, 676-682, 695-711, 721-732, 745-751, 765-779, 794-860, 873-893, 906-975, 982-995, 1003-1035
rmgpy.data.transport                283    146     76     57    43%   54-110, 162, 169, 176, 197, 215, 222, 229, 250-255, 261-263, 307-310, 317-319, 326-328, 338-352, 360-372, 383-387, 414, 446-485, 507-508, 535, 543, 545, 549-553, 570-603
rmgpy.display                        12      4      2      2    57%   37, 41-43, 47
rmgpy.kinetics                        6      0      0      0   100%   
rmgpy.kinetics.diffusionLimited      56     43     12     12    19%   16-19, 22, 34-61, 70-86
rmgpy.measure                         0      0      0      0   100%   
rmgpy.measure.input                 266    234    150    150     8%   77-88, 91-115, 119, 123, 127-138, 142-152, 156-169, 173-186, 190-199, 203-205, 209-210, 223-244, 256-266, 278-288, 329-562
rmgpy.measure.main                  408    384    140    140     4%   81-85, 91-108, 114-140, 147-165, 172-182, 189-195, 202-208, 215-216, 225-274, 288-534, 543-636, 649-679, 688-694, 705-747
rmgpy.measure.network               779    732    332    332     4%   109-122, 125-128, 134-161, 168, 174-177, 184-189, 196-207, 215-248, 255, 269-286, 297-318, 336-370, 379-454, 461-472, 478-486, 495-506, 518-624, 634-649, 660-672, 680-700, 711-723, 734-773, 780-787, 794-801, 808-815, 827-921, 932-991, 994-1007, 1022-1228, 1236-1254, 1265-1313
rmgpy.measure.output                164    146     82     82     7%   53-60, 71-110, 120-124, 135-136, 142-157, 168-169, 175-186, 197-198, 206-231, 241-303
rmgpy.measure.settings                2      0      0      0   100%   
rmgpy.measure.simulate               67     54     30     30    13%   46, 49, 66-128, 144-169, 178-179, 182, 185
rmgpy.molecule                        5      0      0      0   100%   
rmgpy.molecule.adjlist              511     86    329     68    82%   67, 71-73, 83, 136, 142, 147-151, 209, 229, 231, 233, 251, 263-264, 268, 294-296, 330, 335-336, 350, 369, 378, 418, 429, 431, 435-441, 444, 452, 465, 469-475, 486, 494, 503, 505, 507, 511, 513, 515, 519-529, 557, 570, 572, 574, 592, 605-606, 614, 655-658, 676-677, 685, 715-718, 722, 725-728
rmgpy.molecule.draw                 929    574    448    303    36%   76, 79-82, 141-143, 171-173, 182-187, 195-197, 200-203, 206-208, 211-213, 216-219, 268-276, 289, 297-349, 374-376, 385-390, 399-430, 438-448, 455-580, 587-641, 648-720, 733-827, 851-852, 860-861, 884, 906-927, 940-942, 993-996, 1002-1003, 1005-1007, 1046-1047, 1094-1102, 1124-1125, 1138-1141, 1160-1165, 1171-1172, 1201-1202, 1210-1212, 1215-1216, 1224-1226, 1232-1239, 1244-1247, 1256-1259, 1264-1281, 1291-1294, 1298-1301, 1305-1322, 1350-1354, 1368-1488
rmgpy.pdep                            5      0      0      0   100%   
rmgpy.pdep.draw                     291    277     86     86     4%   57-70, 73-79, 87-107, 116-125, 131-142, 148-159, 165-181, 185-213, 222-479
rmgpy.pdep.network                  532    408    230    209    19%   51-53, 60, 130, 137-149, 161, 181, 194-261, 272-345, 358, 361, 364, 396, 460-464, 473, 495-515, 529-688, 699-716, 724-738, 745-748, 755-758, 768-771, 774-775, 789-860, 871-925, 938-954
rmgpy.qm                              0      0      0      0   100%   
rmgpy.qm.gaussian                   132    101     50     46    19%   27-28, 30-31, 51-52, 56-61, 80-139, 145-150, 166-169, 176-201, 209-224
rmgpy.qm.main                        72     17     26     14    68%   131-132, 135, 137, 149, 151, 153, 156-167
rmgpy.qm.molecule                   188    140     38     37    22%   10-11, 48, 56, 60, 64, 73-81, 94-115, 119-121, 137-170, 197-201, 210, 215, 220, 225, 230, 236-238, 245, 254-276, 282-290, 296-314, 321, 330-333, 341-343, 349-352, 361-406
rmgpy.qm.mopac                      144    107     50     48    20%   23, 25, 59-60, 63-68, 87-141, 147-152, 176-202, 214-236, 254-277
rmgpy.qm.qmdata                      35     27      2      2    22%   23-38, 41, 75-101
rmgpy.qm.qmverifier                  26     20      6      6    19%   18-24, 40-61, 71
rmgpy.qm.symmetry                    82     53     22     18    32%   128-130, 133, 163-176, 182, 188-197, 203-208, 214-226, 235-259
rmgpy.rmg                             2      0      0      0   100%   
rmgpy.rmg.model                     911    844    496    496     5%   80-81, 87, 104-164, 174-224, 232-240, 247-251, 277, 292-293, 318-345, 355-375, 383-430, 440-505, 522-576, 594-605, 611-622, 634-785, 794-862, 869-957, 966-1002, 1012-1038, 1044, 1052-1137, 1145-1191, 1200-1203, 1213-1214, 1222-1226, 1233-1239, 1247-1257, 1264-1269, 1281-1329, 1344-1384, 1398-1423, 1436-1489, 1504-1582, 1593-1596, 1604-1622, 1629-1664
rmgpy.rmg.output                    168    160     78     78     3%   62-584, 592-1177
rmgpy.rmg.pdep                      316    287    182    182     6%   73-85, 91, 108, 130-133, 136, 142, 145, 152, 158-178, 187-208, 217-239, 246-265, 273-297, 305-315, 322-377, 387-448, 455-635
rmgpy.statmech                        5      0      0      0   100%   
rmgpy.thermo                          3      0      0      0   100%   
rmgpy.transport                      28      1      0      0    96%   71
-----------------------------------------------------------------------------
TOTAL                             14212  11053   6187   5432    19%   
----------------------------------------------------------------------
Ran 790 tests.

FAILED (SKIP=25, errors=3)
make: *** [test] Error 1
