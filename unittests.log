mkdir -p testing/coverage
rm -rf testing/coverage/*
nosetests --nocapture --nologcapture --all-modules --verbose --with-coverage --cover-inclusive --cover-package=rmgpy --cover-erase --cover-html --cover-html-dir=testing/coverage rmgpy
Failure: ValueError (rmgpy.species.Species has the wrong size, try recompiling) ... ERROR
Failure: ImportError (cannot import name ReactionError) ... ERROR
Test the value of the atomic mass unit. ... ok
Test the value of the Avogadro constant. ... ok
Test the value of the Bohr radius. ... ok
Test the value of the Boltzmann constant. ... ok
Test the value of the electron rest mass. ... ok
Test the value of the elementary charge constant. ... ok
Test the value of the gas law constant. ... ok
Test the value of the Hartree energy. ... ok
Test the value of the neutron rest mass. ... ok
Test the value of pi. ... ok
Test the value of the Planck constant. ... ok
Test the value of the proton rest mass. ... ok
Test the value of the reduced Planck constant. ... ok
Test the value of the speed of light in a vacuum. ... ok
Test that nodes can match other nodes. ... ok
Test that the MatchNodeToStructure family works properly. ... ok
Failure: ImportError (cannot import name ReactionError) ... ERROR
Failure: ImportError (cannot import name ReactionError) ... ERROR
Test we can estimate solvation thermochemistry. ... ok
Test that for a given solvent viscosity and temperature we can calculate a solute's diffusivity ... ok
Test we can calculate and set the McGowan volume for species containing H,C,O,N or S ... ok
Test we can estimate Abraham solute parameters correctly using group contributions ... ok
Test we can obtain solute parameters from a library ... ok
Test we can obtain solvent parameters from a library ... ok
Test we can calculate the solvent viscosity given a temperature and its A-E correlation parameters ... ok
Test that the new ThermoDatabase generates appropriate thermo data. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test we generate symmetry numbers correctly. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test that the new ThermoDatabase generates appropriate thermo data. for Aromatics. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test we generate symmetry numbers correctly. for Aromatics. ... SKIP: WIP test failed: Expected list, got rmgpy.molecule.molecule.Molecule
Test that the Arrhenius A property was properly set. ... ok
Test that the Arrhenius Ea property was properly set. ... ok
Test that the Arrhenius T0 property was properly set. ... ok
Test that the Arrhenius Tmax property was properly set. ... ok
Test that the Arrhenius Tmin property was properly set. ... ok
Test the Arrhenius.changeRate() method. ... ok
Test the Arrhenius.changeT0() method. ... ok
Test that the Arrhenius comment property was properly set. ... ok
Test the Arrhenius.fitToData() method. ... ok
Test the Arrhenius.getRateCoefficient() method. ... ok
Test the Arrhenius.isTemperatureValid() method. ... ok
Test that the Arrhenius n property was properly set. ... ok
Test that an Arrhenius object can be pickled and unpickled with no loss ... ok
Test that an Arrhenius object can be reconstructed from its repr() ... ok
Test that the ArrheniusEP A property was properly set. ... ok
Test that the ArrheniusEP E0 property was properly set. ... ok
Test that the ArrheniusEP Tmax property was properly set. ... ok
Test that the ArrheniusEP Tmin property was properly set. ... ok
Test that the ArrheniusEP alpha property was properly set. ... ok
Test the ArrheniusEP.changeRate() method. ... ok
Test that the ArrheniusEP comment property was properly set. ... ok
Test the ArrheniusEP.getRateCoefficient() method. ... ok
Test the ArrheniusEP.isTemperatureValid() method. ... ok
Test that the ArrheniusEP n property was properly set. ... ok
Test that an ArrheniusEP object can be pickled and unpickled with no loss ... ok
Test that an ArrheniusEP object can be reconstructed from its repr() ... ok
Test that the MultiArrhenius Tmax property was properly set. ... ok
Test that the MultiArrhenius Tmin property was properly set. ... ok
Test that the MultiArrhenius A property was properly set. ... ok
Test the MultiArrhenius.changeRate() method. ... ok
Test that the MultiArrhenius comment property was properly set. ... ok
Test the MultiArrhenius.getRateCoefficient() method. ... ok
Test the MultiArrhenius.isTemperatureValid() method. ... ok
Test that a MultiArrhenius object can be pickled and unpickled with no loss ... ok
Test that a MultiArrhenius object can be reconstructed from its repr() ... ok
Test that we can convert to an Arrhenius ... ok
Test the toArrhenius fitting multiple kinetics over a small range, see if we're within 5% at a few points ... ok
Test the toArrhenius temperature range is set correctly. ... ok
Test that the MultiPDepArrhenius Pmax property was properly set. ... ok
Test that the MultiPDepArrhenius Pmin property was properly set. ... ok
Test that the MultiPDepArrhenius Tmax property was properly set. ... ok
Test that the MultiPDepArrhenius Tmin property was properly set. ... ok
Test that the MultiPDepArrhenius arrhenius property was properly set. ... ok
Test the PDepMultiArrhenius.changeRate() method. ... ok
Test that the MultiPDepArrhenius comment property was properly set. ... ok
Test the MultiPDepArrhenius.getRateCoefficient() method. ... ok
Test the MultiPDepArrhenius.isPressureValid() method. ... ok
Test the MultiPDepArrhenius.isTemperatureValid() method. ... ok
Test that a MultiPDepArrhenius object can be pickled and unpickled with ... ok
Test that a MultiPDepArrhenius object can be reconstructed from its ... ok
Test that the PDepArrhenius Pmax property was properly set. ... ok
Test that the PDepArrhenius Pmin property was properly set. ... ok
Test that the PDepArrhenius Tmax property was properly set. ... ok
Test that the PDepArrhenius Tmin property was properly set. ... ok
Test that the PDepArrhenius arrhenius property was properly set. ... ok
Test the PDepArrhenius.changeRate() method. ... ok
Test that the PDepArrhenius comment property was properly set. ... ok
Test the PDepArrhenius.fitToData() method. ... ok
Test the PDepArrhenius.getRateCoefficient() method. ... ok
Test the PDepArrhenius.isPressureDependent() method. ... ok
Test that a PDepArrhenius object can be successfully pickled and ... ok
Test that the PDepArrhenius pressures property was properly set. ... ok
Test that a PDepArrhenius object can be successfully reconstructed ... ok
Test that the Chebyshev Pmax property was properly set. ... ok
Test that the Chebyshev Pmin property was properly set. ... ok
Test that the Chebyshev Tmax property was properly set. ... ok
Test that the Chebyshev Tmin property was properly set. ... ok
Test the Chebyshev.changeRate() method. ... ok
Test that the Chebyshev coeffs property was properly set. ... ok
Test that the Chebyshev comment property was properly set. ... ok
Test the Chebyshev.fitToData() method. ... ok
Test the Chebyshev.getRateCoefficient() method. ... ok
Test the Chebyshev.isPressureDependent() method. ... ok
Test that a Chebyshev object can be pickled and unpickled with no loss ... ok
Test that a Chebyshev object can be reconstructed from its repr() ... ok
Test that the Lindemann Pmax property was properly set. ... ok
Test that the Lindemann Pmin property was properly set. ... ok
Test that the Lindemann Tmax property was properly set. ... ok
Test that the Lindemann Tmin property was properly set. ... ok
Test that the Lindemann arrheniusHigh property was properly set. ... ok
Test that the Lindemann arrheniusLow property was properly set. ... ok
Test the Lindemann.changeRate() method. ... ok
Test that the Lindemann comment property was properly set. ... ok
Test the Lindemann.getRateCoefficient() method. ... ok
Test the Lindemann.isPressureDependent() method. ... ok
Test that a Lindemann object can be pickled and unpickled with no loss ... ok
Test that a Lindemann object can be reconstructed from its repr() ... ok
Test that the ThirdBody Pmax property was properly set. ... ok
Test that the ThirdBody Pmin property was properly set. ... ok
Test that the ThirdBody Tmax property was properly set. ... ok
Test that the ThirdBody Tmin property was properly set. ... ok
Test that the ThirdBody arrhenius property was properly set. ... ok
Test the ThirdBody.changeRate() method. ... ok
Test that the ThirdBody comment property was properly set. ... ok
Test the ThirdBody.getEffectivePressure() method. ... ok
Test the ThirdBody.getRateCoefficient() method. ... ok
Test the ThirdBody.isPressureDependent() method. ... ok
Test that a ThirdBody object can be successfully pickled and ... ok
Test that a ThirdBody object can be successfully reconstructed ... ok
Test that the Troe Pmax property was properly set. ... ok
Test that the Troe Pmin property was properly set. ... ok
Test that the Troe T1 property was properly set. ... ok
Test that the Troe T2 property was properly set. ... ok
Test that the Troe T3 property was properly set. ... ok
Test that the Troe Tmax property was properly set. ... ok
Test that the Troe Tmin property was properly set. ... ok
Test that the Troe alpha property was properly set. ... ok
Test that the Troe arrheniusHigh property was properly set. ... ok
Test that the Troe arrheniusLow property was properly set. ... ok
Test the Troe.changeRate() method. ... ok
Test that the Troe comment property was properly set. ... ok
Test the Troe.getRateCoefficient() method. ... ok
Test the Troe.isPressureDependent() method. ... ok
Test that a Troe object can be pickled and unpickled with no loss of ... ok
Test that a Troe object can be reconstructed from its repr() output ... ok
Test that the KineticsData Tdata property was properly set. ... ok
Test that the KineticsData Tmax property was properly set. ... ok
Test that the KineticsData Tmin property was properly set. ... ok
Test that the KineticsData comment property was properly set. ... ok
Test the KineticsData.getRateCoefficient() method. ... ok
Test the KineticsData.isTemperatureValid() method. ... ok
Test that the KineticsData kdata property was properly set. ... ok
Test that a KineticsData object can be pickled and unpickled with no ... ok
Test that a KineticsData object can be reconstructed from its repr() ... ok
Test that the PDepKineticsData Pdata property was properly set. ... ok
Test that the PDepKineticsData Pmax property was properly set. ... ok
Test that the PDepKineticsData Pmin property was properly set. ... ok
Test that the PDepKineticsData Tdata property was properly set. ... ok
Test that the PDepKineticsData Tmax property was properly set. ... ok
Test that the PDepKineticsData Tmin property was properly set. ... ok
Test that the PDepKineticsData comment property was properly set. ... ok
Test the PDepKineticsData.getRateCoefficient() method. ... ok
Test the PDepKineticsData.isPressureValid() method. ... ok
Test the PDepKineticsData.isTemperatureValid() method. ... ok
Test that the PDepKineticsData kdata property was properly set. ... ok
Test that a PDepKineticsData object can be pickled and unpickled with no ... ok
Test that a PDepKineticsData object can be reconstructed from its repr() ... ok
Test the conversion of first-order rate coefficient units to an integer ... ok
Test the conversion of second-order rate coefficient units to an integer ... ok
Test the conversion of third-order rate coefficient units to an integer ... ok
Test the conversion of zeroth-order rate coefficient units to an integer ... ok
Test the conversion of a reaction order of one to rate coefficient ... ok
Test the conversion of a reaction order of two to rate coefficient ... ok
Test the conversion of a reaction order of three to rate coefficient ... ok
Test the conversion of a reaction order of zero to rate coefficient ... ok
Test that the Eckart E0_TS property was properly set. ... ok
Test that the Eckart E0_prod property was properly set. ... ok
Test that the Eckart E0_reac property was properly set. ... ok
Test the Eckart.calculateTunnelingFactor() method. ... ok
Test that the Eckart frequency property was properly set. ... ok
Test that an Eckart object can be successfully pickled and ... ok
Test that an Eckart object can be successfully reconstructed ... ok
Test the Wigner.calculateTunnelingFactor() method. ... ok
Test that the Wigner frequency property was properly set. ... ok
Test that a Wigner object can be successfully pickled and unpickled ... ok
Test that a Wigner object can be successfully reconstructed from its ... ok
adjlist: Test the Group.fromAdjacencyList() method. ... ok
testFromAdjacencyList_multiplicity (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
testFromAdjacencyList_multiplicity_list (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
adjlist: Test the Group.fromAdjacencyList() method on an old style adjacency list. ... ok
adjlist: Test the Group.toAdjacencyList() method. ... ok
adjlist: Check the adjacency list read/write functions for a full molecule. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 1. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 2. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 3. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 4. ... ok
Test we can read an intermediate style adjacency list with implicit hydrogens 1 ... ok
Test we can read an old style adjacency list with implicit hydrogens 1 ... ok
adjlist: Test that the adjlist reading and writing works with Helium. ... ok
adjlist: Test that improperly formed adjlists raise an InvalidAdjacencyListError. ... ok
adjlist: Test the Molecule.toAdjacencyList() method. ... ok
adjlist: Test that molecule adjlists containing wildcards raise an InvalidAdjacencyListError. ... ok
Test the AtomType.equivalent() method. ... ok
Test the AtomType.isSpecificCaseOf() method. ... ok
Test that we can reconstruct an AtomType object from its repr() ... ok
Test that an AtomType object can be successfully pickled and ... ok
Test the AtomType.setActions() method. ... ok
Test that getAtomType() returns appropriate carbon atom types. ... ok
Test that getAtomType() returns the hydrogen atom type. ... ok
Test that getAtomType() returns appropriate nitrogen atom types. ... ok
Test that getAtomType() returns appropriate types for other misc inerts. ... ok
Test that getAtomType() returns appropriate oxygen atom types. ... ok
Test that getAtomType() returns appropriate silicon atom types. ... ok
Test that getAtomType() returns appropriate sulfur atom types. ... ok
Test we can create PDF files from molecules. ... ok
Test we can create PDF surface without a temporary file (newer versions of PyCairo?) ... ok
Test we can create PNG files from molecules. ... ok
Test we can draw a polycyclic molecule ... ok
Test the rmgpy.elements.getElement() method. ... ok
Test that we can reconstruct an Element object from its repr() ... ok
Test that an Element object can be successfully pickled and ... ok
Test the Graph.addEdge() method. ... ok
Test the Graph.addVertex() method. ... ok
Test the graph copy function to ensure a complete copy of the graph is ... ok
Test the Graph.getAllCycles() method. ... ok
test_getAllCyclicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
test_getAllPolycylicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
Test the Graph.getEdge() method. ... ok
Test the Graph.getEdges() method. ... ok
Test the Graph.getSmallestSetOfSmallestRings() method. ... ok
Test the Graph.hasEdge() method. ... ok
Test the Graph.hasVertex() method. ... ok
Test the Graph.isCyclic() method. ... ok
Test the Graph.isEdgeInCycle() method. ... ok
Test the Graph.isVertexInCycle() method. ... ok
Check the graph isomorphism functions. ... ok
Test the graph merge function to ensure a proper merging of the graph ... ok
Test that a Graph object can be successfully pickled and unpickled ... ok
Test the Graph.removeEdge() method. ... ok
Test the Graph.removeVertex() method. ... ok
Test the Graph.resetConnectivityValues() method. ... ok
Test the Graph.sortVertices() method. ... ok
Test the graph split function to ensure a proper splitting of the graph ... ok
Check the subgraph isomorphism functions. ... ok
Test the Graph.updateConnectivityValues() method. ... ok
Tests the vertex connectivity values as introduced by Morgan (1965). ... ok
Test the Group.clearLabeledAtoms() method. ... ok
Test the Group.containsLabeledAtom() method. ... ok
Test the Group.findIsomorphism() method. ... ok
Test the Group.findSubgraphIsomorphisms() method. ... ok
Test the Group.fromAdjacencyList() method. ... ok
Test the Group.getLabeledAtom() method. ... ok
Test the Group.getLabeledAtoms() method. ... ok
Test the Group.isIsomorphic() method. ... ok
Test the Group.isSubgraphIsomorphic() method. ... ok
Test that a Group object can be successfully pickled and ... ok
Test the Group.toAdjacencyList() method. ... ok
Test the GroupAtom.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a FORM_BOND action. ... ok
Test the GroupAtom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupAtom.copy() method. ... ok
Test the GroupAtom.equivalent() method. ... ok
Test the GroupAtom.isSpecificCaseOf() method. ... ok
Test that a GroupAtom object can be successfully pickled and ... ok
Test the GroupBond.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a FORM_BOND action. ... ok
Test the GroupBond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupBond.copy() method. ... ok
Test the GroupBond.equivalent() method. ... ok
Test the GroupBond.isSpecificCaseOf() method. ... ok
Test that a GroupBond object can be successfully pickled and ... ok
Test the Atom.applyAction() method for a BREAK_BOND action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a FORM_BOND action. ... ok
Test the Atom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Atom.copy() method. ... ok
Test the Atom.decrementRadical() method. ... ok
Test the Atom.equivalent() method. ... ok
Test the Atom.incrementRadical() method. ... ok
Test the Atom.isCarbon() method. ... ok
Test the Atom.isHydrogen() method. ... ok
Test the Atom.isNonHydrogen() method. ... ok
Test the Atom.isOxygen() method. ... ok
Test the Atom.isSpecificCaseOf() method. ... ok
Test the Atom.mass property. ... ok
Test the Atom.number property. ... ok
Test that a Atom object can be successfully pickled and ... ok
Test the Atom.symbol property. ... ok
Test the Bond.applyAction() method for a BREAK_BOND action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a FORM_BOND action. ... ok
Test the Bond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Bond.copy() method. ... ok
Test the Bond.decrementOrder() method. ... ok
Test the GroupBond.equivalent() method. ... ok
Test the Bond.incrementOrder() method. ... ok
Test the Bond.isBenzene() method. ... ok
Test the Bond.isDouble() method. ... ok
Test the Bond.isSingle() method. ... ok
Test the Bond.isSpecificCaseOf() method. ... ok
Test the Bond.isTriple() method. ... ok
Test that a Bond object can be successfully pickled and ... ok
Check the adjacency list read/write functions for a full molecule. ... ok
Test the Molecule.isAromatic() method for Benzene. ... SKIP: WIP test failed: False is not true
Test the Molecule.isAromatic() method for Cyclohexane. ... ok
Test the Molecule.isAromatic() method for Naphthalene. ... SKIP: WIP test failed: False is not true
Test that Augmented InChI generation is printing the /mult layer ... ok
Test that Augmented InChI Key generation is printing the mult layer ... ok
Test the Molecule.clearLabeledAtoms() method. ... ok
Test the Molecule.containsLabeledAtom() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method for dimethylacetylene. ... SKIP: WIP test failed: 2 != 1
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.fromAdjacencyList() method. ... ok
Make sure that H radical is produced properly from its InChI ... ok
Make sure that H radical is produced properly from its SMILES ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getLabeledAtom() method. ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getMolecularWeight() method. ... ok
Test that InChI Key generation is working properly. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Check the graph isomorphism functions. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test that a Molecule object can be successfully pickled and ... ok
Test that the species [CH] has three radical electrons and a spin multiplicity of 4. ... ok
Test that the species [CH2] has two radical electrons and a spin multiplicity of 3. ... ok
Test radical count on [CH2]C[CH2] ... ok
Test the Molecule.getRadicalCount() method. ... ok
Test that we can generate a few SMILES strings as expected ... ok
Test the Molecule.getSmallestSetOfSmallestRings() method with a complex ... ok
Check the graph isomorphism functions. ... ok
testSubgraphIsomorphismAgain (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
testSubgraphIsomorphismManyLabels (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
Test the Molecule.toAdjacencyList() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAtomSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 4
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateAxisSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateBondSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 2
Test the Molecule.calculateCyclicSymmetryNumber() method. ... SKIP: WIP test failed: 1 != 2
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateCyclicSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the Molecule.calculateSymmetryNumber() method. ... SKIP: WIP test failed: 9 != '36?'
Test the Molecule.calculateSymmetryNumber() method. ... ok
Test the SingleExponentialDown.T0 attribute. ... ok
Test the SingleExponentialDown.sigma attribute. ... ok
Test the SingleExponentialDown.getAlpha() method. ... ok
Test the SingleExponentialDown.n attribute. ... ok
Test that a SingleExponentialDown object can be successfully pickled ... ok
Test that a SingleExponentialDown object can be successfully ... ok
Test that the network `bathGas` property was properly set. ... make: *** [test] Segmentation fault (core dumped)
